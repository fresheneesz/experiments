// Generated by uRequire v0.4.0beta2
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('draft/sets', module, __dirname, '.');
   module.exports = factory(nr.require, exports, module, nr.require('lodash'), nr.require('../agreement/isAgree'));
 } else if (typeof define === 'function' && define.amd) {
     define(['require', 'exports', 'module', 'lodash', '../agreement/isAgree'], factory);
 }
})(this,function (require, exports, module, _, isAgree) {
  // uRequire: start body of original nodejs module
http : Array.prototype.cartesian = function(a) {
    var temp = [];
    for (var i = 0; i < this.length; i++) {
        for (var j = 0; j < a.length; j++) {
            temp.push([ this[i], a[j] ]);
        }
    }
    return temp;
};

Array.prototype.complement = function(a) {
    var keys = {};
    var temp = [];
    for (var i = 0; i < this.length; i++) {
        keys[this[i]] = 1;
    }
    for (var i = 0; i < a.length; i++) {
        if (keys[a[i]] != undefined) {
            keys[a[i]]--;
        }
    }
    for (var key in keys) {
        if (keys[key] > 0) {
            temp.push(key);
        }
    }
    return temp;
};

Array.prototype.difference = function(a) {
    var temp = [];
    var keys = {};
    for (var i = 0; i < this.length; i++) {
        keys[this[i]] = 1;
    }
    for (var i = 0; i < a.length; i++) {
        if (keys[a[i]] != undefined) {
            keys[a[i]] = 2;
        }
    }
    for (var key in keys) {
        if (keys[key] == 1) {
            temp.push(key);
        }
    }
    return temp;
};

Array.prototype.intersection = function(a) {
    var keys = {};
    var temp = [];
    var bigger = this.length > a.length ? this : a;
    var smaller = this.length > a.length ? a : this;
    for (var i = 0; i < smaller.length; i++) {
        keys[smaller[i]] = 1;
    }
    for (var i = 0; i < bigger.length; i++) {
        if (keys[bigger[i]] != undefined) {
            keys[bigger[i]]++;
        }
    }
    for (var key in keys) {
        if (keys[key] > 0) {
            temp.push(key);
        }
    }
    return temp;
};

Array.prototype.powerset = function() {
    var temp = [];
    var clone = [];
    temp.push([]);
    for (var i = 0; i < this.length; i++) {
        temp.push([ this[i] ]);
    }
    var clone = this.union([]);
    while (clone.length > 0) {
        var el = clone[0];
        var others = clone.complement([ el ]);
        for (var i = 0; i < others.length; i++) {
            temp.push([ el, others[i] ]);
        }
        clone = others;
    }
    for (var i = 0; i < this.length; i++) {}
    temp.push(this.union([]));
    return temp;
};

Array.prototype.union = function(a) {
    var keys = {};
    var temp = [];
    var bigger = this.length > a.length ? this : a;
    var smaller = this.length > a.length ? a : this;
    for (var i = 0; i < smaller.length; i++) {
        keys[smaller[i]] = 1;
    }
    for (var i = 0; i < bigger.length; i++) {
        if (keys[bigger[i]] != undefined) {
            keys[bigger[i]]++;
        }
    }
    for (var key in keys) {
        temp.push(key);
    }
    return temp;
};
// uRequire: end body of original nodejs module


return module.exports;
})
})();