// Generated by CoffeeScript 1.6.3
var UError,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = UError = (function(_super) {
  __extends(UError, _super);

  function UError(message, props) {
    var p, v;
    this.message = message;
    for (p in props) {
      v = props[p];
      this[p] = v;
    }
    if (this.stack) {
      this.stack = (new Error()).stack.replace(/\n[^\n]*/, '');
    }
  }

  return UError;

})(Error);
