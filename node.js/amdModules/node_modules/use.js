module.exports = function() {
    if(arguments.length === 1) {
		var callback = arguments[0]
		var modules = getParamNames(callback)
		
	} else if(arguments.length === 2) {
        var module = arguments[0]
		var callback = arguments[1]
		var modules = getParamNames(callback)

	} else if(arguments.length === 3) {
		var module = arguments[0]
        var callback = arguments[2]
		var moduleAliases = getParamNames(callback)
		var moduleOverrides = arguments[1]
		
		var modules = []
		moduleAliases.forEach(function(alias, index) {
			if(moduleOverrides[alias] || moduleOverrides[index])
				if(moduleOverrides[alias] && moduleOverrides[index])
					throw Error("You can't override moduleName via its alias *and* index")
				else if(moduleOverrides[alias])
					modules.push(moduleOverrides[alias])
				else //if(moduleOverrides[index])
					modules.push(moduleOverrides[index])
			else
				modules.push(alias)
		})
		
	} else {
		throw Error("Invalid number of arguments ("+arguments.length+"), should be 1, 2, or 3.")
	}

	var loadedModules = modules.map(function(moduleName) {
		//var location = module.require.resolve(moduleName)
		
		return module.require(moduleName)
	})
	
	var moduleResult = callback.apply(this, loadedModules)
    if(moduleResult !== undefined && module !== undefined)
        module.exports = moduleResult
}


var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
function getParamNames(func) {
    var fnStr = func.toString().replace(STRIP_COMMENTS, '')
    var result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).match(/([^\s,]+)/g)
    if(result === null) 
    	result = []
    
	return result
}