var Stitch = require("../stitch/Stitch.js");

var cache = {};
var lastRun = 0;
var CACHE_TIMEOUT = 10;
var loadCache = function(cacheData) {
	var rows = Stitch.Database.select("SELECT * FROM " + cacheData.table).wait();
	console.log("Got " + rows.length + " rows");
}

exports.reloadCaches = function() {
	var now = new Date().getTime() / 1000;
	if (now - lastRun < CACHE_TIMEOUT) {
		return;
	}

	cache = {};
	var list = [
		//{"cache":"Rule","table":"rule"}
	];

	var cachesLeft = [];
    var d = require('domain').create();
    d.on('error', function(err) {
        console.log("problem loading "+i.Rule+": "+err);
    });
	list.foreach(function(cacheData) {
		d.run(function() {
            console.log("Loading cache " + cacheData.cache);

            loadCache(cacheData);
            console.log(cacheData.cache + " complete");
        });
	});

	now = new Date().getTime() / 1000;
	lastRun = now;
}